{
  "componentDescription": "",
  "propDescriptions": {
    "action": {
      "description": "A ref for imperative actions. It currently only supports <code>focusVisible()</code> action.",
      "notes": "",
      "deprecated": "",
      "typeDescriptions": {}
    },
    "disabled": {
      "description": "If <code>true</code>, the component is disabled.",
      "notes": "",
      "deprecated": "",
      "typeDescriptions": {}
    },
    "onChange": {
      "description": "Callback invoked when new value is being set.",
      "notes": "",
      "deprecated": "",
      "typeDescriptions": {}
    },
    "slotProps": {
      "description": "The props used for each slot inside the Tab.",
      "notes": "",
      "deprecated": "",
      "typeDescriptions": {}
    },
    "slots": {
      "description": "The components used for each slot inside the Tab. Either a string to use a HTML element or a component.",
      "notes": "",
      "deprecated": "",
      "typeDescriptions": {}
    },
    "value": {
      "description": "You can provide your own value. Otherwise, it falls back to the child position index.",
      "notes": "",
      "deprecated": "",
      "typeDescriptions": {}
    }
  },
  "classDescriptions": {
    "root": { "description": "Class name applied to the root element." },
    "selected": {
      "description": "State class applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the root `button` element",
      "conditions": "<code>selected={true}</code>"
    },
    "disabled": {
      "description": "State class applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the root `button` element",
      "conditions": "<code>disabled={true}</code>"
    }
  },
  "slotDescriptions": { "root": "The component that renders the root." }
}
