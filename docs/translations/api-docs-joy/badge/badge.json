{
  "componentDescription": "",
  "propDescriptions": {
    "anchorOrigin": {
      "description": "The anchor of the badge.",
      "notes": "",
      "deprecated": "",
      "typeDescriptions": {}
    },
    "badgeContent": {
      "description": "The content rendered within the badge.",
      "notes": "",
      "deprecated": "",
      "typeDescriptions": {}
    },
    "badgeInset": {
      "description": "The inset of the badge. Support shorthand syntax as described in <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/inset\">https://developer.mozilla.org/en-US/docs/Web/CSS/inset</a>.",
      "notes": "",
      "deprecated": "",
      "typeDescriptions": {}
    },
    "children": {
      "description": "The badge will be added relative to this node.",
      "notes": "",
      "deprecated": "",
      "typeDescriptions": {}
    },
    "color": {
      "description": "The color of the component. It supports those theme colors that make sense for this component.",
      "notes": "",
      "deprecated": "",
      "typeDescriptions": {}
    },
    "component": {
      "description": "The component used for the root node. Either a string to use a HTML element or a component.",
      "notes": "",
      "deprecated": "",
      "typeDescriptions": {}
    },
    "invisible": {
      "description": "If <code>true</code>, the badge is invisible.",
      "notes": "",
      "deprecated": "",
      "typeDescriptions": {}
    },
    "max": {
      "description": "Max count to show.",
      "notes": "",
      "deprecated": "",
      "typeDescriptions": {}
    },
    "showZero": {
      "description": "Controls whether the badge is hidden when <code>badgeContent</code> is zero.",
      "notes": "",
      "deprecated": "",
      "typeDescriptions": {}
    },
    "size": {
      "description": "The size of the component.",
      "notes": "",
      "deprecated": "",
      "typeDescriptions": {}
    },
    "slotProps": {
      "description": "The props used for each slot inside.",
      "notes": "",
      "deprecated": "",
      "typeDescriptions": {}
    },
    "slots": {
      "description": "The components used for each slot inside.",
      "notes": "",
      "deprecated": "",
      "typeDescriptions": {}
    },
    "sx": {
      "description": "The system prop that allows defining system overrides as well as additional CSS styles.",
      "notes": "",
      "deprecated": "",
      "typeDescriptions": {}
    },
    "variant": {
      "description": "The <a href=\"https://mui.com/joy-ui/main-features/global-variants/\">global variant</a> to use.",
      "notes": "",
      "deprecated": "",
      "typeDescriptions": {}
    }
  },
  "classDescriptions": {
    "root": { "description": "Class name applied to the root element." },
    "badge": {
      "description": "Class name applied to {{nodeName}}.",
      "nodeName": "the badge <code>span</code> element"
    },
    "anchorOriginTopRight": {
      "description": "Class name applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the badge <code>span</code> element",
      "conditions": "<code>anchorOrigin={{ 'top', 'right' }}</code>"
    },
    "anchorOriginBottomRight": {
      "description": "Class name applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the badge <code>span</code> element",
      "conditions": "<code>anchorOrigin={{ 'bottom', 'right' }}</code>"
    },
    "anchorOriginTopLeft": {
      "description": "Class name applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the badge <code>span</code> element",
      "conditions": "<code>anchorOrigin={{ 'top', 'left' }}</code>"
    },
    "anchorOriginBottomLeft": {
      "description": "Class name applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the badge <code>span</code> element",
      "conditions": "<code>anchorOrigin={{ 'bottom', 'left' }}</code>"
    },
    "colorPrimary": {
      "description": "Class name applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the badge <code>span</code> element",
      "conditions": "<code>color=\"primary\"</code>"
    },
    "colorDanger": {
      "description": "Class name applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the badge <code>span</code> element",
      "conditions": "<code>color=\"danger\"</code>"
    },
    "colorInfo": {
      "description": "Class name applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the badge <code>span</code> element",
      "conditions": "<code>color=\"info\"</code>"
    },
    "colorNeutral": {
      "description": "Class name applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the badge <code>span</code> element",
      "conditions": "<code>color=\"neutral\"</code>"
    },
    "colorSuccess": {
      "description": "Class name applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the badge <code>span</code> element",
      "conditions": "<code>color=\"success\"</code>"
    },
    "colorWarning": {
      "description": "Class name applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the badge <code>span</code> element",
      "conditions": "<code>color=\"warning\"</code>"
    },
    "colorContext": {
      "description": "Class name applied to {{nodeName}} when {{conditions}}.",
      "nodeName": "the root element",
      "conditions": "color inversion is triggered"
    },
    "invisible": {
      "description": "State class applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the badge <code>span</code> element",
      "conditions": "<code>invisible={true}</code>"
    },
    "locationInside": {
      "description": "State class applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the badge <code>span</code> element",
      "conditions": "<code>location=\"inside\"</code>"
    },
    "locationOutside": {
      "description": "State class applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the badge <code>span</code> element",
      "conditions": "<code>location=\"outside\"</code>"
    },
    "sizeSm": {
      "description": "Class name applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the badge <code>span</code> element",
      "conditions": "<code>size=\"sm\"</code>"
    },
    "sizeMd": {
      "description": "Class name applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the badge <code>span</code> element",
      "conditions": "<code>size=\"md\"</code>"
    },
    "sizeLg": {
      "description": "Class name applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the badge <code>span</code> element",
      "conditions": "<code>size=\"lg\"</code>"
    },
    "variantPlain": {
      "description": "Class name applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the root element",
      "conditions": "<code>variant=\"plain\"</code>"
    },
    "variantOutlined": {
      "description": "Class name applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the badge <code>span</code> element",
      "conditions": "<code>variant=\"outlined\"</code>"
    },
    "variantSoft": {
      "description": "Class name applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the badge <code>span</code> element",
      "conditions": "<code>variant=\"soft\"</code>"
    },
    "variantSolid": {
      "description": "Class name applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the badge <code>span</code> element",
      "conditions": "<code>variant=\"solid\"</code>"
    }
  },
  "slotDescriptions": {
    "root": "The component that renders the root.",
    "badge": "The component that renders the badge."
  }
}
