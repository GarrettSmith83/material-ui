{
  "componentDescription": "The props of the [Modal](/material-ui/api/modal/) component are available\nwhen `variant=\"temporary\"` is set.",
  "propDescriptions": {
    "anchor": {
      "description": "Side from which the drawer will appear.",
      "notes": "",
      "deprecated": "",
      "typeDescriptions": {}
    },
    "children": {
      "description": "The content of the component.",
      "notes": "",
      "deprecated": "",
      "typeDescriptions": {}
    },
    "classes": {
      "description": "Override or extend the styles applied to the component.",
      "notes": "",
      "deprecated": "",
      "typeDescriptions": {}
    },
    "elevation": {
      "description": "The elevation of the drawer.",
      "notes": "",
      "deprecated": "",
      "typeDescriptions": {}
    },
    "hideBackdrop": {
      "description": "If <code>true</code>, the backdrop is not rendered.",
      "notes": "",
      "deprecated": "",
      "typeDescriptions": {}
    },
    "ModalProps": {
      "description": "Props applied to the <a href=\"/material-ui/api/modal/\"><code>Modal</code></a> element.",
      "notes": "",
      "deprecated": "",
      "typeDescriptions": {}
    },
    "onClose": {
      "description": "Callback fired when the component requests to be closed.",
      "notes": "",
      "deprecated": "",
      "typeDescriptions": { "event": "The event source of the callback." }
    },
    "open": {
      "description": "If <code>true</code>, the component is shown.",
      "notes": "",
      "deprecated": "",
      "typeDescriptions": {}
    },
    "PaperProps": {
      "description": "Props applied to the <a href=\"/material-ui/api/paper/\"><code>Paper</code></a> element.",
      "notes": "",
      "deprecated": "",
      "typeDescriptions": {}
    },
    "SlideProps": {
      "description": "Props applied to the <a href=\"/material-ui/api/slide/\"><code>Slide</code></a> element.",
      "notes": "",
      "deprecated": "",
      "typeDescriptions": {}
    },
    "sx": {
      "description": "The system prop that allows defining system overrides as well as additional CSS styles.",
      "notes": "",
      "deprecated": "",
      "typeDescriptions": {}
    },
    "transitionDuration": {
      "description": "The duration for the transition, in milliseconds. You may specify a single timeout for all transitions, or individually with an object.",
      "notes": "",
      "deprecated": "",
      "typeDescriptions": {}
    },
    "variant": {
      "description": "The variant to use.",
      "notes": "",
      "deprecated": "",
      "typeDescriptions": {}
    }
  },
  "classDescriptions": {
    "root": { "description": "Styles applied to the root element." },
    "docked": {
      "description": "Styles applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the root element",
      "conditions": "<code>variant=\"permanent or persistent\"</code>"
    },
    "paper": {
      "description": "Styles applied to {{nodeName}}.",
      "nodeName": "the Paper component"
    },
    "paperAnchorLeft": {
      "description": "Styles applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the Paper component",
      "conditions": "<code>anchor=\"left\"</code>"
    },
    "paperAnchorRight": {
      "description": "Styles applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the Paper component",
      "conditions": "<code>anchor=\"right\"</code>"
    },
    "paperAnchorTop": {
      "description": "Styles applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the Paper component",
      "conditions": "<code>anchor=\"top\"</code>"
    },
    "paperAnchorBottom": {
      "description": "Styles applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the Paper component",
      "conditions": "<code>anchor=\"bottom\"</code>"
    },
    "paperAnchorDockedLeft": {
      "description": "Styles applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the Paper component",
      "conditions": "<code>anchor=\"left\"</code> and <code>variant</code> is not &quot;temporary&quot;"
    },
    "paperAnchorDockedTop": {
      "description": "Styles applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the Paper component",
      "conditions": "<code>anchor=\"top\"</code> and <code>variant</code> is not &quot;temporary&quot;"
    },
    "paperAnchorDockedRight": {
      "description": "Styles applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the Paper component",
      "conditions": "<code>anchor=\"right\"</code> and <code>variant</code> is not &quot;temporary&quot;"
    },
    "paperAnchorDockedBottom": {
      "description": "Styles applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the Paper component",
      "conditions": "<code>anchor=\"bottom\"</code> and <code>variant</code> is not &quot;temporary&quot;"
    },
    "modal": { "description": "Styles applied to {{nodeName}}.", "nodeName": "the Modal component" }
  }
}
