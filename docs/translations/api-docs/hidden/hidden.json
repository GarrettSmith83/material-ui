{
  "componentDescription": "Responsively hides children based on the selected implementation.",
  "propDescriptions": {
    "children": {
      "description": "The content of the component.",
      "notes": "",
      "deprecated": "",
      "typeDescriptions": {}
    },
    "implementation": {
      "description": "Specify which implementation to use.  &#39;js&#39; is the default, &#39;css&#39; works better for server-side rendering.",
      "notes": "",
      "deprecated": "",
      "typeDescriptions": {}
    },
    "initialWidth": {
      "description": "You can use this prop when choosing the <code>js</code> implementation with server-side rendering.<br>As <code>window.innerWidth</code> is unavailable on the server, we default to rendering an empty component during the first mount. You might want to use a heuristic to approximate the screen width of the client browser screen width.<br>For instance, you could be using the user-agent or the client-hints. <a href=\"https://caniuse.com/#search=client%20hint\">https://caniuse.com/#search=client%20hint</a>",
      "notes": "",
      "deprecated": "",
      "typeDescriptions": {}
    },
    "lgDown": {
      "description": "If <code>true</code>, screens this size and down are hidden.",
      "notes": "",
      "deprecated": "",
      "typeDescriptions": {}
    },
    "lgUp": {
      "description": "If <code>true</code>, screens this size and up are hidden.",
      "notes": "",
      "deprecated": "",
      "typeDescriptions": {}
    },
    "mdDown": {
      "description": "If <code>true</code>, screens this size and down are hidden.",
      "notes": "",
      "deprecated": "",
      "typeDescriptions": {}
    },
    "mdUp": {
      "description": "If <code>true</code>, screens this size and up are hidden.",
      "notes": "",
      "deprecated": "",
      "typeDescriptions": {}
    },
    "only": {
      "description": "Hide the given breakpoint(s).",
      "notes": "",
      "deprecated": "",
      "typeDescriptions": {}
    },
    "smDown": {
      "description": "If <code>true</code>, screens this size and down are hidden.",
      "notes": "",
      "deprecated": "",
      "typeDescriptions": {}
    },
    "smUp": {
      "description": "If <code>true</code>, screens this size and up are hidden.",
      "notes": "",
      "deprecated": "",
      "typeDescriptions": {}
    },
    "xlDown": {
      "description": "If <code>true</code>, screens this size and down are hidden.",
      "notes": "",
      "deprecated": "",
      "typeDescriptions": {}
    },
    "xlUp": {
      "description": "If <code>true</code>, screens this size and up are hidden.",
      "notes": "",
      "deprecated": "",
      "typeDescriptions": {}
    },
    "xsDown": {
      "description": "If <code>true</code>, screens this size and down are hidden.",
      "notes": "",
      "deprecated": "",
      "typeDescriptions": {}
    },
    "xsUp": {
      "description": "If <code>true</code>, screens this size and up are hidden.",
      "notes": "",
      "deprecated": "",
      "typeDescriptions": {}
    }
  },
  "classDescriptions": {}
}
