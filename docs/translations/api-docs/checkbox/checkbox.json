{
  "componentDescription": "",
  "propDescriptions": {
    "checked": {
      "description": "If <code>true</code>, the component is checked.",
      "notes": "",
      "deprecated": "",
      "typeDescriptions": {}
    },
    "checkedIcon": {
      "description": "The icon to display when the component is checked.",
      "notes": "",
      "deprecated": "",
      "typeDescriptions": {}
    },
    "classes": {
      "description": "Override or extend the styles applied to the component.",
      "notes": "",
      "deprecated": "",
      "typeDescriptions": {}
    },
    "color": {
      "description": "The color of the component. It supports both default and custom theme colors, which can be added as shown in the <a href=\"https://mui.com/material-ui/customization/palette/#adding-new-colors\">palette customization guide</a>.",
      "notes": "",
      "deprecated": "",
      "typeDescriptions": {}
    },
    "defaultChecked": {
      "description": "The default checked state. Use when the component is not controlled.",
      "notes": "",
      "deprecated": "",
      "typeDescriptions": {}
    },
    "disabled": {
      "description": "If <code>true</code>, the component is disabled.",
      "notes": "",
      "deprecated": "",
      "typeDescriptions": {}
    },
    "disableRipple": {
      "description": "If <code>true</code>, the ripple effect is disabled.",
      "notes": "",
      "deprecated": "",
      "typeDescriptions": {}
    },
    "icon": {
      "description": "The icon to display when the component is unchecked.",
      "notes": "",
      "deprecated": "",
      "typeDescriptions": {}
    },
    "id": {
      "description": "The id of the <code>input</code> element.",
      "notes": "",
      "deprecated": "",
      "typeDescriptions": {}
    },
    "indeterminate": {
      "description": "If <code>true</code>, the component appears indeterminate. This does not set the native input element to indeterminate due to inconsistent behavior across browsers. However, we set a <code>data-indeterminate</code> attribute on the <code>input</code>.",
      "notes": "",
      "deprecated": "",
      "typeDescriptions": {}
    },
    "indeterminateIcon": {
      "description": "The icon to display when the component is indeterminate.",
      "notes": "",
      "deprecated": "",
      "typeDescriptions": {}
    },
    "inputProps": {
      "description": "<a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes\">Attributes</a> applied to the <code>input</code> element.",
      "notes": "",
      "deprecated": "",
      "typeDescriptions": {}
    },
    "inputRef": {
      "description": "Pass a ref to the <code>input</code> element.",
      "notes": "",
      "deprecated": "",
      "typeDescriptions": {}
    },
    "onChange": {
      "description": "Callback fired when the state is changed.",
      "notes": "",
      "deprecated": "",
      "typeDescriptions": {
        "event": "The event source of the callback. You can pull out the new checked state by accessing <code>event.target.checked</code> (boolean)."
      }
    },
    "required": {
      "description": "If <code>true</code>, the <code>input</code> element is required.",
      "notes": "",
      "deprecated": "",
      "typeDescriptions": {}
    },
    "size": {
      "description": "The size of the component. <code>small</code> is equivalent to the dense checkbox styling.",
      "notes": "",
      "deprecated": "",
      "typeDescriptions": {}
    },
    "sx": {
      "description": "The system prop that allows defining system overrides as well as additional CSS styles.",
      "notes": "",
      "deprecated": "",
      "typeDescriptions": {}
    },
    "value": {
      "description": "The value of the component. The DOM API casts this to a string. The browser uses &quot;on&quot; as the default value.",
      "notes": "",
      "deprecated": "",
      "typeDescriptions": {}
    }
  },
  "classDescriptions": {
    "root": { "description": "Styles applied to the root element." },
    "checked": {
      "description": "State class applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the root element",
      "conditions": "<code>checked={true}</code>"
    },
    "disabled": {
      "description": "State class applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the root element",
      "conditions": "<code>disabled={true}</code>"
    },
    "indeterminate": {
      "description": "State class applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the root element",
      "conditions": "<code>indeterminate={true}</code>"
    },
    "colorPrimary": {
      "description": "Styles applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the root element",
      "conditions": "<code>color=\"primary\"</code>"
    },
    "colorSecondary": {
      "description": "Styles applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the root element",
      "conditions": "<code>color=\"secondary\"</code>"
    }
  }
}
